{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RSk\\\\Downloads\\\\new\\\\myproj\\\\client\\\\src\\\\components\\\\modal.jsx\";\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass EditModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.propTypes = {\n      message: PropTypes.String,\n      title: PropTypes.String,\n      id: PropTypes.String\n    };\n    this.state = {\n      modal: false,\n      message: null,\n      title: null,\n      data: [],\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"EDIT\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: e => this.setState({\n        title: e.target.value\n      }),\n      type: \"Title\",\n      name: \"title\",\n      id: \"newTitle\",\n      placeholder: \"Title\",\n      defaultValue: this.props.title,\n      className: \"no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: e => this.setState({\n        message: e.target.value\n      }),\n      type: \"textarea\",\n      name: \"note\",\n      id: \"newtitle\",\n      placeholder: \"Take a note ...\",\n      defaultValue: this.props.message,\n      className: \"no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.props.updateDB(this.props.id, this.state.title, this.state.message),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Update Note\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default EditModal;","map":{"version":3,"sources":["C:\\Users\\RSk\\Downloads\\new\\myproj\\client\\src\\components\\modal.jsx"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","PropTypes","EditModal","Component","constructor","props","propTypes","message","String","title","id","state","modal","data","idToDelete","idToUpdate","objectToUpdate","toggle","bind","setState","prevState","render","className","e","target","value","updateDB"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass EditModal extends React.Component {\n    propTypes = {\n    message: PropTypes.String,\n    title: PropTypes.String,\n    id: PropTypes.String\n    };\n    \n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      message: null,\n      title: null,\n      data: [],\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.toggle}>EDIT</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>\n              <Input  \n              onChange={(e) => this.setState({ title: e.target.value })}\n              type=\"Title\" \n              name=\"title\" \n              id=\"newTitle\" \n              placeholder=\"Title\" \n              defaultValue={this.props.title}\n              className=\"no-border\"/>\n        </ModalHeader>\n          <ModalBody>\n            <Input \n              onChange={(e) => this.setState({ message: e.target.value })}\n              type=\"textarea\" \n              name=\"note\" \n              id=\"newtitle\" \n              placeholder=\"Take a note ...\"\n              defaultValue={this.props.message}\n              className=\"no-border\"/>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.props.updateDB(this.props.id, this.state.title, this.state.message)}>Update Note</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default EditModal;"]},"metadata":{},"sourceType":"module"}